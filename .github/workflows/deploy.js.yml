# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy npm

on:
  push:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: ls -R
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
    - run: yarn
    - run: yarn lint:ci
    - run: yarn test:cov
    - run: yarn build
    - run: yarn doc
    - run: mv ./dist/docs ./docs
    - run: tar cvzf parsegraph-docs.tgz ./docs
    - run: mkdir -p ~/.ssh
    - run: echo -n "$SSH_TOKEN" | base64 -d >$HOME/.ssh/id_rsa
      env:
          SSH_TOKEN: ${{ secrets.PARSEGRAPH_SSH_TOKEN }}
    - run: chmod 0400 $HOME/.ssh/id_rsa
    - run: echo "$SSH_TOKEN_SHA1SUM *$HOME/.ssh/id_rsa" | sha1sum -c
      env:
          SSH_TOKEN_SHA1SUM: ${{ secrets.PARSEGRAPH_SSH_TOKEN_SHA1SUM }}
    - run: echo -n "$SSH_KNOWN_HOST" | base64 -d >>$HOME/.ssh/known_hosts
      env:
          SSH_KNOWN_HOST: ${{ secrets.PARSEGRAPH_SSH_KNOWN_HOST }}
    - run: ssh "$SSH_HOST" "mkdir -p $PARSEGRAPH_GITHUB_PATH/$GITHUB_SHA"
      env:
          SSH_HOST: ${{ secrets.PARSEGRAPH_SSH_HOST }}
          PARSEGRAPH_GITHUB_PATH: ${{ secrets.PARSEGRAPH_GITHUB_PATH }}
    - run: scp parsegraph-docs.tgz "$SSH_HOST:$PARSEGRAPH_GITHUB_PATH/$GITHUB_SHA/parsegraph-docs.tgz"
      env:
          SSH_HOST: ${{ secrets.PARSEGRAPH_SSH_HOST }}
          PARSEGRAPH_GITHUB_PATH: ${{ secrets.PARSEGRAPH_GITHUB_PATH }}
    - run: ssh "$SSH_HOST" "cd $PARSEGRAPH_GITHUB_PATH/$GITHUB_SHA && tar xvzf parsegraph-docs.tgz && rm -f ./parsegraph-docs.tgz && cp -f -r docs $DOCS_PATH/$GITHUB_SHA && cd $DOCS_PATH; rm -f main; ln -f -s $GITHUB_SHA main"
      env:
          SSH_HOST: ${{ secrets.PARSEGRAPH_SSH_HOST }}
          PARSEGRAPH_GITHUB_PATH: ${{ secrets.PARSEGRAPH_GITHUB_PATH }}
          DOCS_PATH: ${{ secrets.PARSEGRAPH_DOCS_PATH }}
    - run: mv ./dist/coverage ./coverage
    - run: yarn tar
    - run: yarn deploy
      env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
    - run: export VERSION=`node -e 'console.log(JSON.parse(require("fs").readFileSync("package.json")).version)'` && ssh "$SSH_HOST" "cd $DOCS_PATH; rm -f $VERSION latest; ln -s $GITHUB_SHA $VERSION; ln -s $GITHUB_SHA latest"
      env:
          SSH_HOST: ${{ secrets.PARSEGRAPH_SSH_HOST }}
          DOCS_PATH: ${{ secrets.PARSEGRAPH_DOCS_PATH }}
    - run: tar cvzf parsegraph.tgz parsegraph/
    - uses: actions/upload-artifact@v2
      with:
        name: parsegraph-${{ github.run_number }}
        path: parsegraph.tgz
    - uses: actions/upload-artifact@v2
      with:
        name: parsegraph-docs-${{ github.run_number }}
        path: parsegraph-docs.tgz
    - run: tar cvzf parsegraph-coverage.tgz ./coverage
    - uses: actions/upload-artifact@v2
      with:
        name: parsegraph-coverage-${{ github.run_number }}
        path: parsegraph-coverage.tgz
